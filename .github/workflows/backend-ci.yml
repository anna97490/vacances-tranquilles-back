name: Backend CI - Build and Test

on:
  push:
    branches:
      - main
      - staging
      - 'feature/**'
      - 'fix/**'
  pull_request:
    branches:
      - main
      - staging

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      # Récupération du code
      - name: Checkout code
        uses: actions/checkout@v4

      # Configuration du JDK
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      # Autorisation d'exécution du wrapper Maven
      - name: Grant execute permission to mvnw
        run: chmod +x mvnw

      # Lancement des tests + rapport de couverture
      - name: Run unit tests and generate coverage report
        run: ./mvnw clean verify

      # Envoi de la couverture à Codecov
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./target/site/jacoco/jacoco.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true  # Bloque si Codecov échoue

      # Analyse SonarCloud (bloquante)
      - name: SonarCloud analysis
        continue-on-error: false  # Bloque si Sonar échoue
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: >
          ./mvnw verify
          org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
          -Dsonar.projectKey=anna97490_vacances-tranquilles-back
          -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

  # Déploiement automatique sur Render (uniquement sur main)
  deploy-to-render:
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-and-test

    steps:
      - name: Trigger Render deploy
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
          
