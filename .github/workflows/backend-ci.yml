name: Backend CI - Build and Test

on:
  push:
    branches:
      - main
      - staging
      - 'feature/**'
  pull_request:
    branches:
      - staging
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      # - name: Build and run tests
      #   run: ./mvnw clean verify

      # - name: Enforce 80% code coverage (à activer plus tard)
      #   run: |
      #     echo "Vérification couverture > 80% - À activer plus tard"

  # check-version-change:
  #   runs-on: ubuntu-latest
  #   needs: build-and-test
  #   outputs:
  #     version_changed: ${{ steps.check.outputs.changed }}
  #     is_snapshot: ${{ steps.snapshot-check.outputs.is_snapshot }}
  #
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4
  #       with:
  #         fetch-depth: 0
  #
  #     - name: Get current version from pom.xml
  #       id: current
  #       run: |
  #         current_version=$(grep -m 1 '<version>' pom.xml | sed -E 's/.*<version>(.+)<\/version>.*/\1/')
  #         echo "version=$current_version" >> $GITHUB_OUTPUT
  #
  #     - name: Get version from main branch
  #       id: main
  #       run: |
  #         git fetch origin main
  #         main_version=$(git show origin/main:pom.xml | grep -m 1 '<version>' | sed -E 's/.*<version>(.+)<\/version>.*/\1/')
  #         echo "version=$main_version" >> $GITHUB_OUTPUT
  #
  #     - name: Compare versions
  #       id: check
  #       run: |
  #         if [ "${{ steps.current.outputs.version }}" != "${{ steps.main.outputs.version }}" ]; then
  #           echo "changed=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "changed=false" >> $GITHUB_OUTPUT
  #         fi
  #
  #     - name: Check if current version is SNAPSHOT
  #       id: snapshot-check
  #       run: |
  #         if [[ "${{ steps.current.outputs.version }}" == *"SNAPSHOT"* ]]; then
  #           echo "is_snapshot=true" >> $GITHUB_OUTPUT
  #         else
  #           echo "is_snapshot=false" >> $GITHUB_OUTPUT
  #         fi

  deploy-to-render:
    # needs: [build-and-test, check-version-change]
    # if: needs.check-version-change.outputs.version_changed == 'true' && needs.check-version-change.outputs.is_snapshot == 'false' && github.ref == 'refs/heads/main'
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest

    steps:
      - name: Trigger Render deploy
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_BACKEND }}
